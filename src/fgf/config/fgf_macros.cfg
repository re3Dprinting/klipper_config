[gcode_macro DISABLE_MOTORS]
description: Disable all motors
gcode:
    M84

[gcode_macro M600]
description: Filament runout procedure
gcode:
    M117 Filament Runout Detected!
    {% set E = 50 %}
    PAUSE_NO_PARK
    G91
    G1 E-.8 F2700
    PARK_NOZZLE
    G91
    G1 E5 F500
    G1 E-{E} F2700
    G90

[gcode_macro PARK_NOZZLE]
description: Parks the nozzle to the front left corner of the bed
gcode:
    {% set y = 10 %}      
    {% if printer.toolhead.extruder == "extruder" %}
        {% set x = 10 %}     
    {% else %}
        {% set x = 65 %}
    {% endif %}

    {% if 'x' not in printer.toolhead.homed_axes %} G28 X {% endif %}
    {% if 'y' not in printer.toolhead.homed_axes %} G28 Y {% endif %}
    {% if 'z' not in printer.toolhead.homed_axes %} G28 Z {% endif %}

    SAFE_LIFT_Z Z=30
    G90
    G1 X{x} Y{y} F6000

#TODO: Do not lift is already lifted
[gcode_macro SAFE_LIFT_Z]
description: Lifts the nozzle to a safe height using relative positioning
gcode:
    ##### calculate safe lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = params.Z|float|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    G91
    G1 Z{z_safe}


[gcode_macro Z_GAP_CALIBRATION_POSITION]
description: Move bed to 101.3mm for Z gap calibration
gcode:
    {% set midpoint_x = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set midpoint_y = printer.toolhead.axis_maximum.y|float / 2 %}
    G28
    G1 Z101.3
    G1 X{midpoint_x}
    G1 Y{midpoint_y}
    M84 X Y

#Pellet Change Macros
[gcode_macro PURGE_TWO_MINUTES]
description: Purge for 2 minutes
gcode:
    {% if printer.extruder.can_extrude %}
    M117 Purging for 2 minutes...
    T0
    M83
    G1 E1000 F500
    G92 E0.0
    M400
    M117 Purging Complete
    {% endif %}

[gcode_macro PURGE_FIVE_MINUTES]
description: Purge for 5 minutes
gcode:
    {% if printer.extruder.can_extrude %}
    M117 Purging for 5 minutes...
    T0
    M83
    G1 E2500 F500
    G92 E0.0
    M400
    M117 Purging Complete
    {% endif %}

[gcode_macro PURGE_TEN_MINUTES]
description: Purge for 10 minutes
gcode:
    {% if printer.extruder.can_extrude %}
    M117 Purging for 10 minutes...
    T0
    M83
    G1 E2500 F500
    G1 E2500 F500
    G92 E0.0
    M400
    M117 Purging Complete
    {% endif %}


#Pause, Resume, Cancel Macros
[gcode_macro CANCEL_PRINT]
description: Cancels the print and safe lift Z by 30mm
rename_existing: BASE_CANCEL_PRINT
gcode:
    SAFE_LIFT_Z Z=30
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
description: Pauses the print and parks the nozzle
rename_existing: BASE_PAUSE
gcode:
    CLEAR_PAUSE
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=e0_temp VALUE={printer.extruder.target}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=e1_temp VALUE={printer.extruder1.target}
    SAVE_GCODE_STATE NAME=PAUSE_STATE
    BASE_PAUSE
    PARK_NOZZLE

[gcode_macro PAUSE_NO_PARK]
description: Pauses the print without parking the nozzle
gcode:
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=e0_temp VALUE={printer.extruder.target}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=e1_temp VALUE={printer.extruder1.target}
    SAVE_GCODE_STATE NAME=PAUSE_STATE
    BASE_PAUSE

[gcode_macro RESUME]
description: Resumes the print
rename_existing: BASE_RESUME
variable_e0_temp: 0
variable_e1_temp: 0
gcode:
    M118 E0 Resume Temp { e0_temp }
    M118 E1 Resume Temp { e1_temp }
    M109 S{e0_temp} T0
    M109 s{e1_temp} T1
    M400
    RESTORE_GCODE_STATE NAME=PAUSE_STATE MOVE=1 MOVE_SPEED=80
    M400
    BASE_RESUME

# Preheating Macros
[gcode_macro PET_HEATERS]
description: Preheat bot:225, mid: 220, top: 175
gcode:
  M104 T0 S225
  M104 T1 S220
  M104 T2 S175
[gcode_macro PET_BED]
description: Preheat bed to 70
gcode: M140 S70
[gcode_macro PET_ALL]
description: Preheat bot:225, mid: 220, top: 175 and bed to 70
gcode: 
    PET_HEATERS
    PET_BED

[gcode_macro PC_HEATERS]
description: Preheat bot:235, mid: 230, top: 215
gcode:
  M104 T0 S235
  M104 T1 S230
  M104 T2 S215
[gcode_macro PC_BED]
description: Preheat bed to 100
gcode: M140 S100
[gcode_macro PC_ALL]
description: Preheat bot:235, mid: 230, top: 215 and bed to 100
gcode: 
    PC_HEATERS
    PC_BED

[gcode_macro PLA_HEATERS]
description: Preheat bot:175, mid: 170, top: 155
gcode:
  M104 T0 S175
  M104 T1 S170
  M104 T2 S155
[gcode_macro PLA_BED]
description: Preheat bed to 60
gcode: M140 S60
[gcode_macro PLA_ALL]
description: Preheat bot:175, mid: 170, top: 155 and bed to 60
gcode: 
    PLA_HEATERS
    PLA_BED

[gcode_macro DYNAPURGE_HEATERS]
description: Preheat bot:165, mid: 155, top: 100
gcode:
  M104 T0 S165
  M104 T1 S155
  M104 T2 S100
  
[sdcard_loop]

# 'Marlin' style M808 compatibility macro for SDCard looping
[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

# Cancel object (aka Marlin/RRF M486 commands) support
#


